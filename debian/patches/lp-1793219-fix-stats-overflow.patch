From c7a186e204cdff46b5e02bcb5208ef8979eaf261 Mon Sep 17 00:00:00 2001
From: Oliver Kurth <okurth@vmware.com>
Date: Mon, 17 Sep 2018 16:41:18 -0700
Subject: [PATCH] Handle Linux kernel /proc FS uint32 type stat overflow when
 calculating tools rate stats.

On both 32-bit and 64-bit Linux, tools always parses Linux kernel /proc
FS stats as uint64 values.  For rate stats, current - previous can handle
uint64 type stat overflow, but not uint32 type.

Origin: upstream, https://github.com/vmware/open-vm-tools/commit/c7a186e204cdff46b5e02bcb5208ef8979eaf261
Bug-Ubuntu: https://bugs.launchpad.net/bugs/1793219
Bug-Debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=909146
Last-Update: 2018-09-24

---
 .../services/plugins/guestInfo/perfMonLinux.c       | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/open-vm-tools/services/plugins/guestInfo/perfMonLinux.c b/open-vm-tools/services/plugins/guestInfo/perfMonLinux.c
index fa2344b0f..eb74faa55 100644
--- a/open-vm-tools/services/plugins/guestInfo/perfMonLinux.c
+++ b/open-vm-tools/services/plugins/guestInfo/perfMonLinux.c
@@ -1094,7 +1094,18 @@ GuestInfoAppendRate(Bool emitNameSpace,             // IN:
       if (reportID == GuestStatID_Linux_DiskRequestQueueAvg) {
          valueDelta = ((double)(currentStat->value)) / 10;
       } else {
-         valueDelta = currentStat->value - previousStat->value;
+         /*
+          * The /proc FS stat can be uint32 type in the kernel on both x86
+          * and x64 Linux, it is parsed and stored as uint64 in tools, so we
+          * also need to handle uint32 overflow here.
+          */
+         if (currentStat->value < previousStat->value &&
+             previousStat->value <= MAX_UINT32) {
+            valueDelta = (uint32)(currentStat->value) -
+                         (uint32)(previousStat->value);
+         } else {
+            valueDelta = currentStat->value - previousStat->value;
+         }
       }
 
       valueDouble = valueDelta / timeDelta;
-- 
2.17.1

